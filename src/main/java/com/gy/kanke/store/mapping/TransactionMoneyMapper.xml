<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gy.kanke.store.IDao.TransactionMoneyMapper" >
  <resultMap id="BaseResultMap" type="com.gy.kanke.store.domain.TransactionMoney" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="accout_no" property="accoutNo" jdbcType="VARCHAR" />
    <result column="order_qty" property="orderQty" jdbcType="INTEGER" />
    <result column="need_pay" property="needPay" jdbcType="DECIMAL" />
    <result column="sales_amt" property="salesAmt" jdbcType="DECIMAL" />
    <result column="confirm_status" property="confirmStatus" jdbcType="INTEGER" />
    <result column="settle_status" property="settleStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, begin_time, end_time, accout_no, order_qty, need_pay, sales_amt, confirm_status, 
    settle_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gy.kanke.store.domain.TransactionMoneyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ks_transaction_money
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ks_transaction_money
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ks_transaction_money
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.gy.kanke.store.domain.TransactionMoneyExample" >
    delete from ks_transaction_money
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gy.kanke.store.domain.TransactionMoney" >
    insert into ks_transaction_money (id, user_id, begin_time, 
      end_time, accout_no, order_qty, 
      need_pay, sales_amt, confirm_status, 
      settle_status)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{beginTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{accoutNo,jdbcType=VARCHAR}, #{orderQty,jdbcType=INTEGER}, 
      #{needPay,jdbcType=DECIMAL}, #{salesAmt,jdbcType=DECIMAL}, #{confirmStatus,jdbcType=INTEGER}, 
      #{settleStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gy.kanke.store.domain.TransactionMoney" >
    insert into ks_transaction_money
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="beginTime != null" >
        begin_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="accoutNo != null" >
        accout_no,
      </if>
      <if test="orderQty != null" >
        order_qty,
      </if>
      <if test="needPay != null" >
        need_pay,
      </if>
      <if test="salesAmt != null" >
        sales_amt,
      </if>
      <if test="confirmStatus != null" >
        confirm_status,
      </if>
      <if test="settleStatus != null" >
        settle_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null" >
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accoutNo != null" >
        #{accoutNo,jdbcType=VARCHAR},
      </if>
      <if test="orderQty != null" >
        #{orderQty,jdbcType=INTEGER},
      </if>
      <if test="needPay != null" >
        #{needPay,jdbcType=DECIMAL},
      </if>
      <if test="salesAmt != null" >
        #{salesAmt,jdbcType=DECIMAL},
      </if>
      <if test="confirmStatus != null" >
        #{confirmStatus,jdbcType=INTEGER},
      </if>
      <if test="settleStatus != null" >
        #{settleStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gy.kanke.store.domain.TransactionMoneyExample" resultType="java.lang.Integer" >
    select count(*) from ks_transaction_money
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ks_transaction_money
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.beginTime != null" >
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accoutNo != null" >
        accout_no = #{record.accoutNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderQty != null" >
        order_qty = #{record.orderQty,jdbcType=INTEGER},
      </if>
      <if test="record.needPay != null" >
        need_pay = #{record.needPay,jdbcType=DECIMAL},
      </if>
      <if test="record.salesAmt != null" >
        sales_amt = #{record.salesAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.confirmStatus != null" >
        confirm_status = #{record.confirmStatus,jdbcType=INTEGER},
      </if>
      <if test="record.settleStatus != null" >
        settle_status = #{record.settleStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ks_transaction_money
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      accout_no = #{record.accoutNo,jdbcType=VARCHAR},
      order_qty = #{record.orderQty,jdbcType=INTEGER},
      need_pay = #{record.needPay,jdbcType=DECIMAL},
      sales_amt = #{record.salesAmt,jdbcType=DECIMAL},
      confirm_status = #{record.confirmStatus,jdbcType=INTEGER},
      settle_status = #{record.settleStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gy.kanke.store.domain.TransactionMoney" >
    update ks_transaction_money
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null" >
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accoutNo != null" >
        accout_no = #{accoutNo,jdbcType=VARCHAR},
      </if>
      <if test="orderQty != null" >
        order_qty = #{orderQty,jdbcType=INTEGER},
      </if>
      <if test="needPay != null" >
        need_pay = #{needPay,jdbcType=DECIMAL},
      </if>
      <if test="salesAmt != null" >
        sales_amt = #{salesAmt,jdbcType=DECIMAL},
      </if>
      <if test="confirmStatus != null" >
        confirm_status = #{confirmStatus,jdbcType=INTEGER},
      </if>
      <if test="settleStatus != null" >
        settle_status = #{settleStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gy.kanke.store.domain.TransactionMoney" >
    update ks_transaction_money
    set user_id = #{userId,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      accout_no = #{accoutNo,jdbcType=VARCHAR},
      order_qty = #{orderQty,jdbcType=INTEGER},
      need_pay = #{needPay,jdbcType=DECIMAL},
      sales_amt = #{salesAmt,jdbcType=DECIMAL},
      confirm_status = #{confirmStatus,jdbcType=INTEGER},
      settle_status = #{settleStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>