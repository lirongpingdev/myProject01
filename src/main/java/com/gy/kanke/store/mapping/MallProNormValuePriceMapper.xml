<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gy.kanke.store.IDao.MallProNormValuePriceMapper" >
  <resultMap id="BaseResultMap" type="com.gy.kanke.store.domain.MallProNormValuePrice" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="pro_id" property="proId" jdbcType="VARCHAR" />
    <result column="morm_keys" property="mormKeys" jdbcType="VARCHAR" />
    <result column="settlement_price" property="settlementPrice" jdbcType="DECIMAL" />
    <result column="stockpile" property="stockpile" jdbcType="INTEGER" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update_id" property="lastUpdateId" jdbcType="VARCHAR" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="originalPrice" property="originalprice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, pro_id, morm_keys, settlement_price, stockpile, creator, create_time, last_update_id, 
    last_update_time, price, originalPrice
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gy.kanke.store.domain.MallProNormValuePriceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ks_mall_pro_norm_value_price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ks_mall_pro_norm_value_price
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ks_mall_pro_norm_value_price
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.gy.kanke.store.domain.MallProNormValuePriceExample" >
    delete from ks_mall_pro_norm_value_price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gy.kanke.store.domain.MallProNormValuePrice" >
    insert into ks_mall_pro_norm_value_price (id, pro_id, morm_keys, 
      settlement_price, stockpile, creator, 
      create_time, last_update_id, last_update_time, 
      price, originalPrice)
    values (#{id,jdbcType=VARCHAR}, #{proId,jdbcType=VARCHAR}, #{mormKeys,jdbcType=VARCHAR}, 
      #{settlementPrice,jdbcType=DECIMAL}, #{stockpile,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastUpdateId,jdbcType=VARCHAR}, #{lastUpdateTime,jdbcType=TIMESTAMP}, 
      #{price,jdbcType=DECIMAL}, #{originalprice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.gy.kanke.store.domain.MallProNormValuePrice" >
    insert into ks_mall_pro_norm_value_price
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="proId != null" >
        pro_id,
      </if>
      <if test="mormKeys != null" >
        morm_keys,
      </if>
      <if test="settlementPrice != null" >
        settlement_price,
      </if>
      <if test="stockpile != null" >
        stockpile,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastUpdateId != null" >
        last_update_id,
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="originalprice != null" >
        originalPrice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="proId != null" >
        #{proId,jdbcType=VARCHAR},
      </if>
      <if test="mormKeys != null" >
        #{mormKeys,jdbcType=VARCHAR},
      </if>
      <if test="settlementPrice != null" >
        #{settlementPrice,jdbcType=DECIMAL},
      </if>
      <if test="stockpile != null" >
        #{stockpile,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateId != null" >
        #{lastUpdateId,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="originalprice != null" >
        #{originalprice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gy.kanke.store.domain.MallProNormValuePriceExample" resultType="java.lang.Integer" >
    select count(*) from ks_mall_pro_norm_value_price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ks_mall_pro_norm_value_price
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.proId != null" >
        pro_id = #{record.proId,jdbcType=VARCHAR},
      </if>
      <if test="record.mormKeys != null" >
        morm_keys = #{record.mormKeys,jdbcType=VARCHAR},
      </if>
      <if test="record.settlementPrice != null" >
        settlement_price = #{record.settlementPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.stockpile != null" >
        stockpile = #{record.stockpile,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateId != null" >
        last_update_id = #{record.lastUpdateId,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdateTime != null" >
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.originalprice != null" >
        originalPrice = #{record.originalprice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ks_mall_pro_norm_value_price
    set id = #{record.id,jdbcType=VARCHAR},
      pro_id = #{record.proId,jdbcType=VARCHAR},
      morm_keys = #{record.mormKeys,jdbcType=VARCHAR},
      settlement_price = #{record.settlementPrice,jdbcType=DECIMAL},
      stockpile = #{record.stockpile,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_update_id = #{record.lastUpdateId,jdbcType=VARCHAR},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      price = #{record.price,jdbcType=DECIMAL},
      originalPrice = #{record.originalprice,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gy.kanke.store.domain.MallProNormValuePrice" >
    update ks_mall_pro_norm_value_price
    <set >
      <if test="proId != null" >
        pro_id = #{proId,jdbcType=VARCHAR},
      </if>
      <if test="mormKeys != null" >
        morm_keys = #{mormKeys,jdbcType=VARCHAR},
      </if>
      <if test="settlementPrice != null" >
        settlement_price = #{settlementPrice,jdbcType=DECIMAL},
      </if>
      <if test="stockpile != null" >
        stockpile = #{stockpile,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateId != null" >
        last_update_id = #{lastUpdateId,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="originalprice != null" >
        originalPrice = #{originalprice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gy.kanke.store.domain.MallProNormValuePrice" >
    update ks_mall_pro_norm_value_price
    set pro_id = #{proId,jdbcType=VARCHAR},
      morm_keys = #{mormKeys,jdbcType=VARCHAR},
      settlement_price = #{settlementPrice,jdbcType=DECIMAL},
      stockpile = #{stockpile,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_id = #{lastUpdateId,jdbcType=VARCHAR},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DECIMAL},
      originalPrice = #{originalprice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>