<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gy.kanke.store.IDao.AuditRecordsMapper" >
  <resultMap id="BaseResultMap" type="com.gy.kanke.store.domain.AuditRecords" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="audit_type" property="auditType" jdbcType="VARCHAR" />
    <result column="audit_object_id" property="auditObjectId" jdbcType="VARCHAR" />
    <result column="audit_manager_id" property="auditManagerId" jdbcType="VARCHAR" />
    <result column="audit_manager_name" property="auditManagerName" jdbcType="VARCHAR" />
    <result column="audit_state" property="auditState" jdbcType="INTEGER" />
    <result column="audit_result" property="auditResult" jdbcType="VARCHAR" />
    <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, audit_type, audit_object_id, audit_manager_id, audit_manager_name, audit_state, 
    audit_result, audit_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gy.kanke.store.domain.AuditRecordsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ks_audit_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.gy.kanke.store.domain.AuditRecordsExample" >
    delete from ks_audit_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gy.kanke.store.domain.AuditRecords" >
    insert into ks_audit_records (id, audit_type, audit_object_id, 
      audit_manager_id, audit_manager_name, audit_state, 
      audit_result, audit_time)
    values (#{id,jdbcType=VARCHAR}, #{auditType,jdbcType=VARCHAR}, #{auditObjectId,jdbcType=VARCHAR}, 
      #{auditManagerId,jdbcType=VARCHAR}, #{auditManagerName,jdbcType=VARCHAR}, #{auditState,jdbcType=INTEGER}, 
      #{auditResult,jdbcType=VARCHAR}, #{auditTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gy.kanke.store.domain.AuditRecords" >
    insert into ks_audit_records
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="auditType != null" >
        audit_type,
      </if>
      <if test="auditObjectId != null" >
        audit_object_id,
      </if>
      <if test="auditManagerId != null" >
        audit_manager_id,
      </if>
      <if test="auditManagerName != null" >
        audit_manager_name,
      </if>
      <if test="auditState != null" >
        audit_state,
      </if>
      <if test="auditResult != null" >
        audit_result,
      </if>
      <if test="auditTime != null" >
        audit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="auditType != null" >
        #{auditType,jdbcType=VARCHAR},
      </if>
      <if test="auditObjectId != null" >
        #{auditObjectId,jdbcType=VARCHAR},
      </if>
      <if test="auditManagerId != null" >
        #{auditManagerId,jdbcType=VARCHAR},
      </if>
      <if test="auditManagerName != null" >
        #{auditManagerName,jdbcType=VARCHAR},
      </if>
      <if test="auditState != null" >
        #{auditState,jdbcType=INTEGER},
      </if>
      <if test="auditResult != null" >
        #{auditResult,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null" >
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gy.kanke.store.domain.AuditRecordsExample" resultType="java.lang.Integer" >
    select count(*) from ks_audit_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ks_audit_records
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.auditType != null" >
        audit_type = #{record.auditType,jdbcType=VARCHAR},
      </if>
      <if test="record.auditObjectId != null" >
        audit_object_id = #{record.auditObjectId,jdbcType=VARCHAR},
      </if>
      <if test="record.auditManagerId != null" >
        audit_manager_id = #{record.auditManagerId,jdbcType=VARCHAR},
      </if>
      <if test="record.auditManagerName != null" >
        audit_manager_name = #{record.auditManagerName,jdbcType=VARCHAR},
      </if>
      <if test="record.auditState != null" >
        audit_state = #{record.auditState,jdbcType=INTEGER},
      </if>
      <if test="record.auditResult != null" >
        audit_result = #{record.auditResult,jdbcType=VARCHAR},
      </if>
      <if test="record.auditTime != null" >
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ks_audit_records
    set id = #{record.id,jdbcType=VARCHAR},
      audit_type = #{record.auditType,jdbcType=VARCHAR},
      audit_object_id = #{record.auditObjectId,jdbcType=VARCHAR},
      audit_manager_id = #{record.auditManagerId,jdbcType=VARCHAR},
      audit_manager_name = #{record.auditManagerName,jdbcType=VARCHAR},
      audit_state = #{record.auditState,jdbcType=INTEGER},
      audit_result = #{record.auditResult,jdbcType=VARCHAR},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>