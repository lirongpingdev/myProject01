<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:task="http://www.springframework.org/schema/task" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
        				http://www.springframework.org/schema/task 
        				http://www.springframework.org/schema/task/spring-task-3.1.xsd">    
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.gy.kanke.store.controller" />
    
    <!-- 通过BeanFactoryAware，手动从spring容器获取bean -->
    <bean class="com.gy.kanke.store.common.SpringContextHolder"  />
    <bean id="springContextHolder" class="com.gy.kanke.store.common.SpringContextHolder" lazy-init="false"/>
    
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <!-- JSON转换器 -->
    <bean
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" /> 
            </list>
        </property>
    </bean>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/view/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <mvc:interceptors>
	    <mvc:interceptor>
	    	<mvc:mapping path="/**" />
	    	<bean class="com.gy.portal.interceptor.PortalInterceptor">
	    		<property name="systemType" value="2" />
	    		<property name="defaultRedirectUrl" value="http://store.devkanke.com:8080/kk-store/" />
	    		<property name ="apiWhiteList">
             		<list>
                 		<value>/kk-store/test/index</value>
                 		<value>/kk-store/mallPro/kankeSelListApi</value>
                 		<value>/kk-store/seller/getSellerList</value>
                 		<value>/kk-store/seller/checkSeller</value>
                 		<value>/kk-store/seller/getSellerDetail</value>
                 		<value>/kk-store/sellerCenter/getShopInfo</value>
                 		<value>/kk-store/report/checkTranMoney</value>
                 		<value>/kk-store/report/tranMoneyDetailList</value>
                 		<value>/kk-store/report/tranMoneyList</value>
                 		<value>/kk-store/order/updateOrderInfo</value>
                 		<value>/kk-store/order/syncOrderInfo</value>
                 		<!-- 商品审核数据初始化 -->
                 		<value>/kk-store/mallProApi/commodityDetail</value>
                 		<!-- 商品审核同步数据 -->
                 		<value>/kk-store/mallProApi/commodityASUpd</value>
                 		
                 		
             		</list>
   				</property>
	    	</bean>
	    </mvc:interceptor>
	</mvc:interceptors>
      
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>
</beans>